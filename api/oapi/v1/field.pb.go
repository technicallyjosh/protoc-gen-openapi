// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: oapi/v1/field.proto

package oapiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FieldOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Minimum value for the field.
	Min *float64 `protobuf:"fixed64,1,opt,name=min,proto3,oneof" json:"min,omitempty"`
	// Maximum value for the field.
	Max *float64 `protobuf:"fixed64,2,opt,name=max,proto3,oneof" json:"max,omitempty"`
	// Minimum length for the field.
	MinLength *uint64 `protobuf:"varint,3,opt,name=min_length,json=minLength,proto3,oneof" json:"min_length,omitempty"`
	// Maximum length for the field.
	MaxLength *uint64 `protobuf:"varint,4,opt,name=max_length,json=maxLength,proto3,oneof" json:"max_length,omitempty"`
	// Minimum amount of items for an array type.
	MinItems *uint64 `protobuf:"varint,5,opt,name=min_items,json=minItems,proto3,oneof" json:"min_items,omitempty"`
	// Maximum amount of items for an array type.
	MaxItems *uint64 `protobuf:"varint,6,opt,name=max_items,json=maxItems,proto3,oneof" json:"max_items,omitempty"`
	// All items in the array should be unique.
	UniqueItems *bool `protobuf:"varint,7,opt,name=unique_items,json=uniqueItems,proto3,oneof" json:"unique_items,omitempty"`
	// Minimum amount of properties that the field object can have.
	MinProperties *uint64 `protobuf:"varint,8,opt,name=min_properties,json=minProperties,proto3,oneof" json:"min_properties,omitempty"`
	// Maximum amount of properties that the field object can have.
	MaxProperties *uint64 `protobuf:"varint,9,opt,name=max_properties,json=maxProperties,proto3,oneof" json:"max_properties,omitempty"`
	// Regex pattern for the field to match. Refer to
	// https://www.ecma-international.org/ecma-262/5.1/#sec-15.10.1
	Pattern *string `protobuf:"bytes,10,opt,name=pattern,proto3,oneof" json:"pattern,omitempty"`
	// Minimum value of min excluding the defined. e.g. If min=100, 101 is the
	// min.
	ExclusiveMin *bool `protobuf:"varint,11,opt,name=exclusive_min,json=exclusiveMin,proto3,oneof" json:"exclusive_min,omitempty"`
	// Maximum value of max excluding the defined. e.g. If max=100, 99 is the max.
	ExclusiveMax *bool `protobuf:"varint,12,opt,name=exclusive_max,json=exclusiveMax,proto3,oneof" json:"exclusive_max,omitempty"`
	// The number that the value must be a multiple of.
	MultipleOf *float64 `protobuf:"fixed64,13,opt,name=multiple_of,json=multipleOf,proto3,oneof" json:"multiple_of,omitempty"`
	// Values that value must be one of.
	Enum []string `protobuf:"bytes,14,rep,name=enum,proto3" json:"enum,omitempty"`
	// The format of the value.
	Format *string `protobuf:"bytes,15,opt,name=format,proto3,oneof" json:"format,omitempty"`
	// Marks the field as required.
	Required bool `protobuf:"varint,16,opt,name=required,proto3" json:"required,omitempty"`
	// Use the specified type instead of the defined type. This is useful when you
	// are using something like google.protobuf.Timestamp and it really should be
	// a string.
	AsType *string `protobuf:"bytes,17,opt,name=as_type,json=asType,proto3,oneof" json:"as_type,omitempty"`
}

func (x *FieldOptions) Reset() {
	*x = FieldOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oapi_v1_field_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOptions) ProtoMessage() {}

func (x *FieldOptions) ProtoReflect() protoreflect.Message {
	mi := &file_oapi_v1_field_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOptions.ProtoReflect.Descriptor instead.
func (*FieldOptions) Descriptor() ([]byte, []int) {
	return file_oapi_v1_field_proto_rawDescGZIP(), []int{0}
}

func (x *FieldOptions) GetMin() float64 {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return 0
}

func (x *FieldOptions) GetMax() float64 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

func (x *FieldOptions) GetMinLength() uint64 {
	if x != nil && x.MinLength != nil {
		return *x.MinLength
	}
	return 0
}

func (x *FieldOptions) GetMaxLength() uint64 {
	if x != nil && x.MaxLength != nil {
		return *x.MaxLength
	}
	return 0
}

func (x *FieldOptions) GetMinItems() uint64 {
	if x != nil && x.MinItems != nil {
		return *x.MinItems
	}
	return 0
}

func (x *FieldOptions) GetMaxItems() uint64 {
	if x != nil && x.MaxItems != nil {
		return *x.MaxItems
	}
	return 0
}

func (x *FieldOptions) GetUniqueItems() bool {
	if x != nil && x.UniqueItems != nil {
		return *x.UniqueItems
	}
	return false
}

func (x *FieldOptions) GetMinProperties() uint64 {
	if x != nil && x.MinProperties != nil {
		return *x.MinProperties
	}
	return 0
}

func (x *FieldOptions) GetMaxProperties() uint64 {
	if x != nil && x.MaxProperties != nil {
		return *x.MaxProperties
	}
	return 0
}

func (x *FieldOptions) GetPattern() string {
	if x != nil && x.Pattern != nil {
		return *x.Pattern
	}
	return ""
}

func (x *FieldOptions) GetExclusiveMin() bool {
	if x != nil && x.ExclusiveMin != nil {
		return *x.ExclusiveMin
	}
	return false
}

func (x *FieldOptions) GetExclusiveMax() bool {
	if x != nil && x.ExclusiveMax != nil {
		return *x.ExclusiveMax
	}
	return false
}

func (x *FieldOptions) GetMultipleOf() float64 {
	if x != nil && x.MultipleOf != nil {
		return *x.MultipleOf
	}
	return 0
}

func (x *FieldOptions) GetEnum() []string {
	if x != nil {
		return x.Enum
	}
	return nil
}

func (x *FieldOptions) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *FieldOptions) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *FieldOptions) GetAsType() string {
	if x != nil && x.AsType != nil {
		return *x.AsType
	}
	return ""
}

var file_oapi_v1_field_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         5150,
		Name:          "oapi.v1.required",
		Tag:           "varint,5150,opt,name=required",
		Filename:      "oapi/v1/field.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         5151,
		Name:          "oapi.v1.example",
		Tag:           "bytes,5151,opt,name=example",
		Filename:      "oapi/v1/field.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldOptions)(nil),
		Field:         5152,
		Name:          "oapi.v1.options",
		Tag:           "bytes,5152,opt,name=options",
		Filename:      "oapi/v1/field.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// Marks the field as required.
	//
	// optional bool required = 5150;
	E_Required = &file_oapi_v1_field_proto_extTypes[0]
	// Value for the example on the field. This overrides any examples in
	// comments.
	//
	// optional string example = 5151;
	E_Example = &file_oapi_v1_field_proto_extTypes[1]
	// Options for a field.
	//
	// optional oapi.v1.FieldOptions options = 5152;
	E_Options = &file_oapi_v1_field_proto_extTypes[2]
)

var File_oapi_v1_field_proto protoreflect.FileDescriptor

var file_oapi_v1_field_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa4, 0x06, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00,
	0x52, 0x03, 0x6d, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x48, 0x04, 0x52, 0x08, 0x6d, 0x69,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x61, 0x78,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x48, 0x05, 0x52, 0x08,
	0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x06, 0x52, 0x0b, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x48, 0x07, 0x52, 0x0d, 0x6d,
	0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x48, 0x08, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x70,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x07,
	0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x0a, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4d, 0x69,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76,
	0x65, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0b, 0x52, 0x0c, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x78, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x6f, 0x66, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x0c, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f,
	0x66, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x1c, 0x0a, 0x07, 0x61, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0e, 0x52, 0x06, 0x61, 0x73, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x69, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x61, 0x78, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x6d, 0x61, 0x78, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d,
	0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x78,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x6f, 0x66,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x61, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x3a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x9e, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x3a, 0x38, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x9f, 0x28,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3a, 0x4f, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xa0, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x98,
	0x01, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x42, 0x0a,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63,
	0x61, 0x6c, 0x6c, 0x79, 0x6a, 0x6f, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x6f, 0x61, 0x70, 0x69, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x4f, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x4f, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x07, 0x4f, 0x61, 0x70, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x13, 0x4f, 0x61, 0x70, 0x69, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x08, 0x4f, 0x61, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_oapi_v1_field_proto_rawDescOnce sync.Once
	file_oapi_v1_field_proto_rawDescData = file_oapi_v1_field_proto_rawDesc
)

func file_oapi_v1_field_proto_rawDescGZIP() []byte {
	file_oapi_v1_field_proto_rawDescOnce.Do(func() {
		file_oapi_v1_field_proto_rawDescData = protoimpl.X.CompressGZIP(file_oapi_v1_field_proto_rawDescData)
	})
	return file_oapi_v1_field_proto_rawDescData
}

var file_oapi_v1_field_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_oapi_v1_field_proto_goTypes = []interface{}{
	(*FieldOptions)(nil),              // 0: oapi.v1.FieldOptions
	(*descriptorpb.FieldOptions)(nil), // 1: google.protobuf.FieldOptions
}
var file_oapi_v1_field_proto_depIdxs = []int32{
	1, // 0: oapi.v1.required:extendee -> google.protobuf.FieldOptions
	1, // 1: oapi.v1.example:extendee -> google.protobuf.FieldOptions
	1, // 2: oapi.v1.options:extendee -> google.protobuf.FieldOptions
	0, // 3: oapi.v1.options:type_name -> oapi.v1.FieldOptions
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	3, // [3:4] is the sub-list for extension type_name
	0, // [0:3] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_oapi_v1_field_proto_init() }
func file_oapi_v1_field_proto_init() {
	if File_oapi_v1_field_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oapi_v1_field_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_oapi_v1_field_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oapi_v1_field_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 3,
			NumServices:   0,
		},
		GoTypes:           file_oapi_v1_field_proto_goTypes,
		DependencyIndexes: file_oapi_v1_field_proto_depIdxs,
		MessageInfos:      file_oapi_v1_field_proto_msgTypes,
		ExtensionInfos:    file_oapi_v1_field_proto_extTypes,
	}.Build()
	File_oapi_v1_field_proto = out.File
	file_oapi_v1_field_proto_rawDesc = nil
	file_oapi_v1_field_proto_goTypes = nil
	file_oapi_v1_field_proto_depIdxs = nil
}
